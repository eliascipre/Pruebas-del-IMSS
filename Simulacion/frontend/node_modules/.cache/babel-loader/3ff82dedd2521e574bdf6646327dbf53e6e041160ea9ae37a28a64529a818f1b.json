{"ast":null,"code":"/* See LICENSE file for terms of use */\n/*\n * Text diff implementation.\n *\n * This library supports the following APIs:\n * Diff.diffChars: Character by character diff\n * Diff.diffWords: Word (as defined by \\b regex) diff which ignores whitespace\n * Diff.diffLines: Line based diff\n *\n * Diff.diffCss: Diff targeted at CSS content\n *\n * These methods are based on the implementation proposed in\n * \"An O(ND) Difference Algorithm and its Variations\" (Myers, 1986).\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.4.6927\n */\nimport Diff from './diff/base.js';\nimport { diffChars, characterDiff } from './diff/character.js';\nimport { diffWords, diffWordsWithSpace, wordDiff, wordsWithSpaceDiff } from './diff/word.js';\nimport { diffLines, diffTrimmedLines, lineDiff } from './diff/line.js';\nimport { diffSentences, sentenceDiff } from './diff/sentence.js';\nimport { diffCss, cssDiff } from './diff/css.js';\nimport { diffJson, canonicalize, jsonDiff } from './diff/json.js';\nimport { diffArrays, arrayDiff } from './diff/array.js';\nimport { applyPatch, applyPatches } from './patch/apply.js';\nimport { parsePatch } from './patch/parse.js';\nimport { reversePatch } from './patch/reverse.js';\nimport { structuredPatch, createTwoFilesPatch, createPatch, formatPatch } from './patch/create.js';\nimport { convertChangesToDMP } from './convert/dmp.js';\nimport { convertChangesToXML } from './convert/xml.js';\nexport { Diff, diffChars, characterDiff, diffWords, wordDiff, diffWordsWithSpace, wordsWithSpaceDiff, diffLines, lineDiff, diffTrimmedLines, diffSentences, sentenceDiff, diffCss, cssDiff, diffJson, jsonDiff, diffArrays, arrayDiff, structuredPatch, createTwoFilesPatch, createPatch, formatPatch, applyPatch, applyPatches, parsePatch, reversePatch, convertChangesToDMP, convertChangesToXML, canonicalize };","map":{"version":3,"names":["Diff","diffChars","characterDiff","diffWords","diffWordsWithSpace","wordDiff","wordsWithSpaceDiff","diffLines","diffTrimmedLines","lineDiff","diffSentences","sentenceDiff","diffCss","cssDiff","diffJson","canonicalize","jsonDiff","diffArrays","arrayDiff","applyPatch","applyPatches","parsePatch","reversePatch","structuredPatch","createTwoFilesPatch","createPatch","formatPatch","convertChangesToDMP","convertChangesToXML"],"sources":["/home/elias/Documentos/Simulacion/frontend/node_modules/diff/libesm/index.js"],"sourcesContent":["/* See LICENSE file for terms of use */\n/*\n * Text diff implementation.\n *\n * This library supports the following APIs:\n * Diff.diffChars: Character by character diff\n * Diff.diffWords: Word (as defined by \\b regex) diff which ignores whitespace\n * Diff.diffLines: Line based diff\n *\n * Diff.diffCss: Diff targeted at CSS content\n *\n * These methods are based on the implementation proposed in\n * \"An O(ND) Difference Algorithm and its Variations\" (Myers, 1986).\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.4.6927\n */\nimport Diff from './diff/base.js';\nimport { diffChars, characterDiff } from './diff/character.js';\nimport { diffWords, diffWordsWithSpace, wordDiff, wordsWithSpaceDiff } from './diff/word.js';\nimport { diffLines, diffTrimmedLines, lineDiff } from './diff/line.js';\nimport { diffSentences, sentenceDiff } from './diff/sentence.js';\nimport { diffCss, cssDiff } from './diff/css.js';\nimport { diffJson, canonicalize, jsonDiff } from './diff/json.js';\nimport { diffArrays, arrayDiff } from './diff/array.js';\nimport { applyPatch, applyPatches } from './patch/apply.js';\nimport { parsePatch } from './patch/parse.js';\nimport { reversePatch } from './patch/reverse.js';\nimport { structuredPatch, createTwoFilesPatch, createPatch, formatPatch } from './patch/create.js';\nimport { convertChangesToDMP } from './convert/dmp.js';\nimport { convertChangesToXML } from './convert/xml.js';\nexport { Diff, diffChars, characterDiff, diffWords, wordDiff, diffWordsWithSpace, wordsWithSpaceDiff, diffLines, lineDiff, diffTrimmedLines, diffSentences, sentenceDiff, diffCss, cssDiff, diffJson, jsonDiff, diffArrays, arrayDiff, structuredPatch, createTwoFilesPatch, createPatch, formatPatch, applyPatch, applyPatches, parsePatch, reversePatch, convertChangesToDMP, convertChangesToXML, canonicalize };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,IAAI,MAAM,gBAAgB;AACjC,SAASC,SAAS,EAAEC,aAAa,QAAQ,qBAAqB;AAC9D,SAASC,SAAS,EAAEC,kBAAkB,EAAEC,QAAQ,EAAEC,kBAAkB,QAAQ,gBAAgB;AAC5F,SAASC,SAAS,EAAEC,gBAAgB,EAAEC,QAAQ,QAAQ,gBAAgB;AACtE,SAASC,aAAa,EAAEC,YAAY,QAAQ,oBAAoB;AAChE,SAASC,OAAO,EAAEC,OAAO,QAAQ,eAAe;AAChD,SAASC,QAAQ,EAAEC,YAAY,EAAEC,QAAQ,QAAQ,gBAAgB;AACjE,SAASC,UAAU,EAAEC,SAAS,QAAQ,iBAAiB;AACvD,SAASC,UAAU,EAAEC,YAAY,QAAQ,kBAAkB;AAC3D,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,YAAY,QAAQ,oBAAoB;AACjD,SAASC,eAAe,EAAEC,mBAAmB,EAAEC,WAAW,EAAEC,WAAW,QAAQ,mBAAmB;AAClG,SAASC,mBAAmB,QAAQ,kBAAkB;AACtD,SAASC,mBAAmB,QAAQ,kBAAkB;AACtD,SAAS5B,IAAI,EAAEC,SAAS,EAAEC,aAAa,EAAEC,SAAS,EAAEE,QAAQ,EAAED,kBAAkB,EAAEE,kBAAkB,EAAEC,SAAS,EAAEE,QAAQ,EAAED,gBAAgB,EAAEE,aAAa,EAAEC,YAAY,EAAEC,OAAO,EAAEC,OAAO,EAAEC,QAAQ,EAAEE,QAAQ,EAAEC,UAAU,EAAEC,SAAS,EAAEK,eAAe,EAAEC,mBAAmB,EAAEC,WAAW,EAAEC,WAAW,EAAEP,UAAU,EAAEC,YAAY,EAAEC,UAAU,EAAEC,YAAY,EAAEK,mBAAmB,EAAEC,mBAAmB,EAAEb,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}