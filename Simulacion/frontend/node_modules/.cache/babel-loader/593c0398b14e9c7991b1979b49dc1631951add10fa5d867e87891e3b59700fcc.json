{"ast":null,"code":"/**\n * Copyright 2025 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */import React,{useState,useEffect,useRef}from\"react\";import{marked}from\"marked\";import parse from\"html-react-parser\";import{diffArrays,diffWords}from\"diff\";import\"./Interview.css\";import DetailsPopup from\"../DetailsPopup/DetailsPopup\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Interview=_ref=>{let{selectedPatient,selectedCondition,onBack}=_ref;const[messages,setMessages]=useState([]);const[isInterviewComplete,setIsInterviewComplete]=useState(false);const[showEvaluation,setShowEvaluation]=useState(false);const[isAudioEnabled,setIsAudioEnabled]=useState(true);const[evaluation,setEvaluation]=useState('');const[isFetchingEvaluation,setIsFetchingEvaluation]=useState(false);const[currentReport,setCurrentReport]=useState(\"\");const[prevReport,setPrevReport]=useState(\"\");const[waitTime,setWaitTime]=useState(3000);const[showEvaluationInfoPopup,setShowEvaluationInfoPopup]=useState(false);const[isDetailsPopupOpen,setIsDetailsPopupOpen]=useState(false);const chatContainerRef=useRef(null);const reportContentRef=useRef(null);const lastMessageRef=useRef(null);const messageQueue=useRef([]);const eventSourceRef=useRef(null);const timeoutIdRef=useRef(null);const currentPlayingAudio=useRef(null);// To keep track of the currently playing audio instance\nconst isAudioEnabledRef=useRef(isAudioEnabled);useEffect(()=>{isAudioEnabledRef.current=isAudioEnabled;},[isAudioEnabled]);const waitTimeRef=useRef(waitTime);useEffect(()=>{waitTimeRef.current=waitTime;},[waitTime]);const processQueue=React.useCallback(()=>{if(timeoutIdRef.current){clearTimeout(timeoutIdRef.current);}if(messageQueue.current.length===0){// The queue is empty, so the processing chain for this batch is done.\n// Clear the timeout ref so a new message can start a new chain.\ntimeoutIdRef.current=null;setIsInterviewComplete(eventSourceRef.current&&eventSourceRef.current.readyState===EventSource.CLOSED);return;}const nextMessage=messageQueue.current.shift();setMessages(prev=>[...prev,nextMessage]);if(nextMessage.audio&&isAudioEnabledRef.current){if(currentPlayingAudio.current){currentPlayingAudio.current.pause();currentPlayingAudio.current.src='';}const audio=new Audio(nextMessage.audio);currentPlayingAudio.current=audio;audio.onended=()=>{currentPlayingAudio.current=null;processQueue();};audio.onerror=e=>{console.error(\"Audio playback error:\",e);currentPlayingAudio.current=null;processQueue();};audio.play().catch(e=>{console.error(\"Error playing audio automatically:\",e);currentPlayingAudio.current=null;processQueue();});}else{// For non-audio, schedule the next processing call with a fixed delay\n// to simulate reading time. This will call processQueue again, which will\n// handle an empty queue and stop the chain if needed.\ntimeoutIdRef.current=setTimeout(processQueue,waitTimeRef.current);}},[setMessages,setIsInterviewComplete]);useEffect(()=>{if(!selectedPatient||!selectedCondition)return;setMessages([]);setIsInterviewComplete(false);messageQueue.current=[];if(currentPlayingAudio.current){currentPlayingAudio.current.pause();currentPlayingAudio.current=null;}// Prepend base URL if running on localhost:3000\nconst baseURL=window.location.origin===\"http://localhost:3000\"?\"http://localhost:7860\":\"\";const url=\"\".concat(baseURL,\"/api/stream_conversation?patient=\").concat(encodeURIComponent(selectedPatient.name),\"&condition=\").concat(encodeURIComponent(selectedCondition));const eventSource=new EventSource(url);eventSourceRef.current=eventSource;eventSource.onmessage=event=>{try{const data=JSON.parse(event.data);// Check if the parsed object is our special 'end' signal\nif(data&&data.event==='end'){console.log(\"Server signaled end of stream. Closing connection.\");eventSource.close();processQueue();return;}messageQueue.current.push(data);// Always call processQueue after pushing a message, unless audio or timeout is active\nif(!currentPlayingAudio.current&&!timeoutIdRef.current){processQueue();}}catch(error){console.warn(\"Could not parse message data. Data received:\",event.data,\"Error:\",error);}};eventSource.onerror=err=>{console.error(\"EventSource failed:\",err);eventSource.close();};return()=>{if(eventSourceRef.current){eventSourceRef.current.close();eventSourceRef.current=null;}if(timeoutIdRef.current){clearTimeout(timeoutIdRef.current);timeoutIdRef.current=null;}// Ensure any playing audio is stopped when component unmounts or dependencies change\nif(currentPlayingAudio.current){currentPlayingAudio.current.pause();currentPlayingAudio.current=null;}};},[selectedPatient,selectedCondition,processQueue]);useEffect(()=>{processQueue();},[waitTime,processQueue]);useEffect(()=>{// Prevent body scroll when Interview is shown\ndocument.body.style.overflowY=\"clip\";return()=>{document.body.style.overflowY=\"unset\";};},[]);useEffect(()=>{if(chatContainerRef.current){const container=chatContainerRef.current;const lastMessage=messages[messages.length-1];if(lastMessage&&lastMessage.speaker===\"report\"){return;}const isNearBottom=container.scrollHeight-container.scrollTop-container.clientHeight<container.clientHeight;if(isNearBottom&&messages.length>0){lastMessageRef.current.scrollIntoView({behavior:\"smooth\",block:\"end\"});}}},[messages]);// Update report on new messages\nuseEffect(()=>{const reportMessages=messages.filter(msg=>msg.speaker===\"report\");if(reportMessages.length>0){const latestReportMessageText=reportMessages[reportMessages.length-1].text;const newReport=marked(latestReportMessageText.trim());if(newReport!==currentReport){setPrevReport(currentReport);setCurrentReport(newReport);}}},[messages,currentReport]);// Updated diff function to tokenize HTML and use nested diffWords for text changes\nconst getDiffReport=()=>{// Tokenize HTML into tags and text parts\nconst tokenizeHTML=html=>html.match(/(<[^>]+>|[^<]+)/g)||[];const tokensPrev=tokenizeHTML(prevReport);const tokensCurrent=tokenizeHTML(currentReport);const diffParts=diffArrays(tokensPrev,tokensCurrent);let result=\"\";for(let i=0;i<diffParts.length;i++){// If a removed part is immediately followed by an added part,\n// and both are plain text (not an HTML tag), apply inner diffWords.\nif(diffParts[i].removed&&i+1<diffParts.length&&diffParts[i+1].added){const removedText=diffParts[i].value.join(\"\");const addedText=diffParts[i+1].value.join(\"\");// Check if both parts are not HTML tags\nif(!/^<[^>]+>$/.test(removedText)&&!/^<[^>]+>$/.test(addedText)){const innerDiff=diffWords(removedText,addedText);const innerResult=innerDiff.map(part=>{if(part.added){return\"<span class=\\\"add\\\">\".concat(part.value,\"</span>\");}else if(part.removed){return\"<span class=\\\"remove\\\">\".concat(part.value,\"</span>\");}return part.value;}).join(\"\");result+=innerResult;i++;continue;}}if(diffParts[i].added){result+=\"<span class=\\\"add\\\">\".concat(diffParts[i].value.join(\"\"),\"</span>\");}else if(diffParts[i].removed){result+=\"<span class=\\\"remove\\\">\".concat(diffParts[i].value.join(\"\"),\"</span>\");}else{result+=diffParts[i].value.join(\"\");}}return result;};// Fetch evaluation when showEvaluation is triggered\nuseEffect(()=>{if(!showEvaluation)return;setIsFetchingEvaluation(true);setEvaluation('');// Get latest report\nconst reportMessages=messages.filter(msg=>msg.speaker===\"report\");const report=reportMessages.length>0?marked(reportMessages[reportMessages.length-1].text.trim()):\"<p>No report available.</p>\";// Prepend base URL if running on localhost:3000\nconst baseURL=window.location.origin===\"http://localhost:3000\"?\"http://localhost:7860\":\"\";fetch(\"\".concat(baseURL,\"/api/evaluate_report\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({report,condition:selectedCondition})}).then(response=>response.json()).then(data=>{setEvaluation(data.evaluation.replace('```html\\n','').replace('\\n```',''));setIsFetchingEvaluation(false);}).catch(error=>{setEvaluation('Error fetching evaluation.');setIsFetchingEvaluation(false);});},[showEvaluation,messages,selectedCondition]);// Scroll report-content to bottom when evaluate button appears\nuseEffect(()=>{if(isInterviewComplete&&reportContentRef.current){reportContentRef.current.scrollTop=reportContentRef.current.scrollHeight;}},[isInterviewComplete]);const handleToggleWaitTime=()=>{setWaitTime(prev=>prev===1000?3000:1000);};const handleToggleAudio=()=>{setIsAudioEnabled(prev=>{const isNowEnabled=!prev;// If we are disabling audio and something is playing, stop it and continue the queue.\nif(!isNowEnabled&&currentPlayingAudio.current){currentPlayingAudio.current.pause();currentPlayingAudio.current.src='';currentPlayingAudio.current=null;}return isNowEnabled;});};const playAudio=audioDataUrl=>{if(audioDataUrl){const audio=new Audio(audioDataUrl);audio.play().catch(e=>{console.error(\"Error playing audio:\",e);});}};return/*#__PURE__*/_jsxs(\"div\",{className:\"page interview-page\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"headerButtonsContainer\",children:[/*#__PURE__*/_jsxs(\"button\",{className:\"back-button\",onClick:onBack,children:[/*#__PURE__*/_jsx(\"i\",{className:\"material-icons back-button-icon\",children:\"keyboard_arrow_left\"}),\"Atr\\xE1s\"]}),/*#__PURE__*/_jsxs(\"button\",{className:\"details-button\",onClick:()=>setIsDetailsPopupOpen(true),children:[/*#__PURE__*/_jsx(\"i\",{className:\"material-icons code-block-icon\",children:\"code\"}),\"\\xA0 Detalles sobre esta Demo\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"frame\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"interview-split-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"interview-left-section\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"interview-chat-panel\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"header2\",children:[\"Entrevista Simulada \\xA0\",/*#__PURE__*/_jsx(\"i\",{className:\"material-icons toggle-icon\",style:{cursor:\"pointer\",color:isAudioEnabled?\"#1976d2\":\"#888\"},title:\"Haz clic para \".concat(isAudioEnabled?\"desactivar\":\"activar\",\" el audio\"),onClick:handleToggleAudio,children:isAudioEnabled?\"volume_up\":\"volume_off\"}),isAudioEnabled&&/*#__PURE__*/_jsx(\"span\",{children:\"audio por Gemini TTS\"}),!isAudioEnabled&&/*#__PURE__*/_jsx(\"i\",{className:\"material-icons toggle-icon\",style:{cursor:\"pointer\",color:waitTime===1000?\"#1976d2\":\"#888\"},title:\"Haz clic para \".concat(waitTime===1000?\"ralentizar\":\"acelerar\",\" la entrevista\"),onClick:handleToggleWaitTime,children:\"speed\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"chat-container\",ref:chatContainerRef,children:messages.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"chat-waiting-indicator\",children:\"Esperando a que comience la entrevista...\"}):messages.filter(msg=>msg.speaker!==\"report\").map((msg,idx,filteredMessages)=>/*#__PURE__*/_jsxs(\"div\",{ref:idx===filteredMessages.length-1?lastMessageRef:null,className:\"chat-message-wrapper \".concat(msg.speaker).concat(idx===filteredMessages.length-1?\" fade-in\":\"\").concat(msg.audio?\" has-audio\":\"\"),children:[msg.speaker.includes(\"interviewer\")&&/*#__PURE__*/_jsx(\"img\",{className:\"chat-avatar\",src:\"assets/ai_headshot.svg\",alt:\"Interviewer\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-bubble \".concat(msg.audio?\"with-audio\":\"\"),children:[msg.speaker.includes(\"thinking\")&&/*#__PURE__*/_jsx(\"div\",{className:\"thinking-header\",children:\"Pensando...\"}),msg.text]}),msg.speaker===\"patient\"&&/*#__PURE__*/_jsx(\"img\",{className:\"chat-avatar\",src:selectedPatient.headshot,alt:selectedPatient.name})]},idx))})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"interview-right-section\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"header2\",children:\"Reporte Generado\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"report-content\",ref:reportContentRef,children:[/*#__PURE__*/_jsx(\"div\",{dangerouslySetInnerHTML:{__html:prevReport?getDiffReport():currentReport}}),isInterviewComplete&&/*#__PURE__*/_jsxs(\"button\",{className:\"evaluate-button\",onClick:()=>setShowEvaluationInfoPopup(true),disabled:showEvaluation||showEvaluationInfoPopup,children:[/*#__PURE__*/_jsx(\"i\",{className:\"material-icons back-button-icon\",children:\"keyboard_arrow_down\"}),\"Ver Evaluaci\\xF3n del Reporte\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"evaluation-text\",children:showEvaluation&&(isFetchingEvaluation?/*#__PURE__*/_jsx(\"div\",{children:\"Por favor espera...\"}):parse(evaluation))})]})]})]})}),showEvaluationInfoPopup&&/*#__PURE__*/_jsx(\"div\",{className:\"popup-overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"popup-content\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Acerca de la Evaluaci\\xF3n\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Ahora le pediremos a MedGemma que eval\\xFAe su propio rendimiento al generar este reporte. Le proporcionaremos toda la informaci\\xF3n sobre \",selectedPatient.name,\", incluyendo su diagn\\xF3stico real y aspectos del historial de la condici\\xF3n no incluidos previamente. Usando esta nueva informaci\\xF3n, MedGemma destacar\\xE1 hechos clave que incluy\\xF3 correctamente e identificar\\xE1 otra informaci\\xF3n que habr\\xEDa sido beneficiosa agregar.\"]}),/*#__PURE__*/_jsx(\"p\",{children:\"El prop\\xF3sito de este paso es proporcionar a los usuarios no m\\xE9dicos una idea de qu\\xE9 tan bien lo hizo MedGemma en esta tarea. Aunque la evaluaci\\xF3n es completada por MedGemma, los ejemplos en esta demo tambi\\xE9n han sido revisados por cl\\xEDnicos para precisi\\xF3n. Aunque la evaluaci\\xF3n de MedGemma no representa un est\\xE1ndar basado en consenso, esta ilustraci\\xF3n simplemente muestra un ejemplo de un enfoque que los desarrolladores podr\\xEDan adoptar para evaluar calidad y completitud.\"}),/*#__PURE__*/_jsx(\"button\",{className:\"popup-button\",onClick:()=>{setShowEvaluationInfoPopup(false);setShowEvaluation(true);},children:\"Continuar\"})]})}),/*#__PURE__*/_jsx(DetailsPopup,{isOpen:isDetailsPopupOpen,onClose:()=>setIsDetailsPopupOpen(false)})]});};export default Interview;","map":{"version":3,"names":["React","useState","useEffect","useRef","marked","parse","diffArrays","diffWords","DetailsPopup","jsx","_jsx","jsxs","_jsxs","Interview","_ref","selectedPatient","selectedCondition","onBack","messages","setMessages","isInterviewComplete","setIsInterviewComplete","showEvaluation","setShowEvaluation","isAudioEnabled","setIsAudioEnabled","evaluation","setEvaluation","isFetchingEvaluation","setIsFetchingEvaluation","currentReport","setCurrentReport","prevReport","setPrevReport","waitTime","setWaitTime","showEvaluationInfoPopup","setShowEvaluationInfoPopup","isDetailsPopupOpen","setIsDetailsPopupOpen","chatContainerRef","reportContentRef","lastMessageRef","messageQueue","eventSourceRef","timeoutIdRef","currentPlayingAudio","isAudioEnabledRef","current","waitTimeRef","processQueue","useCallback","clearTimeout","length","readyState","EventSource","CLOSED","nextMessage","shift","prev","audio","pause","src","Audio","onended","onerror","e","console","error","play","catch","setTimeout","baseURL","window","location","origin","url","concat","encodeURIComponent","name","eventSource","onmessage","event","data","JSON","log","close","push","warn","err","document","body","style","overflowY","container","lastMessage","speaker","isNearBottom","scrollHeight","scrollTop","clientHeight","scrollIntoView","behavior","block","reportMessages","filter","msg","latestReportMessageText","text","newReport","trim","getDiffReport","tokenizeHTML","html","match","tokensPrev","tokensCurrent","diffParts","result","i","removed","added","removedText","value","join","addedText","test","innerDiff","innerResult","map","part","report","fetch","method","headers","stringify","condition","then","response","json","replace","handleToggleWaitTime","handleToggleAudio","isNowEnabled","playAudio","audioDataUrl","className","children","onClick","cursor","color","title","ref","idx","filteredMessages","includes","alt","headshot","dangerouslySetInnerHTML","__html","disabled","isOpen","onClose"],"sources":["/Users/elias/Documents/Trabajo/Pruebas-del-IMSS/Simulacion/frontend/src/components/Interview/Interview.js"],"sourcesContent":["/**\n * Copyright 2025 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { marked } from \"marked\";\nimport parse from \"html-react-parser\";\nimport { diffArrays, diffWords } from \"diff\";\nimport \"./Interview.css\";\nimport DetailsPopup from \"../DetailsPopup/DetailsPopup\";\n\nconst Interview = ({ selectedPatient, selectedCondition, onBack }) => {\n  const [messages, setMessages] = useState([]);\n  const [isInterviewComplete, setIsInterviewComplete] = useState(false);\n  const [showEvaluation, setShowEvaluation] = useState(false);\n  const [isAudioEnabled, setIsAudioEnabled] = useState(true);\n  const [evaluation, setEvaluation] = useState('');\n  const [isFetchingEvaluation, setIsFetchingEvaluation] = useState(false);\n  const [currentReport, setCurrentReport] = useState(\"\");\n  const [prevReport, setPrevReport] = useState(\"\");\n  const [waitTime, setWaitTime] = useState(3000);\n  const [showEvaluationInfoPopup, setShowEvaluationInfoPopup] = useState(false);\n  const [isDetailsPopupOpen, setIsDetailsPopupOpen] = useState(false);\n  const chatContainerRef = useRef(null);\n  const reportContentRef = useRef(null);\n  const lastMessageRef = useRef(null);\n  const messageQueue = useRef([]);\n  const eventSourceRef = useRef(null);\n  const timeoutIdRef = useRef(null);\n\n  const currentPlayingAudio = useRef(null); // To keep track of the currently playing audio instance\n  const isAudioEnabledRef = useRef(isAudioEnabled);\n  useEffect(() => {\n    isAudioEnabledRef.current = isAudioEnabled;\n  }, [isAudioEnabled]);\n  const waitTimeRef = useRef(waitTime);\n  useEffect(() => {\n    waitTimeRef.current = waitTime;\n  }, [waitTime]);\n\n  const processQueue = React.useCallback(() => {\n    if (timeoutIdRef.current) {\n      clearTimeout(timeoutIdRef.current);\n    }\n\n    if (messageQueue.current.length === 0) {\n      // The queue is empty, so the processing chain for this batch is done.\n      // Clear the timeout ref so a new message can start a new chain.\n      timeoutIdRef.current = null;\n      setIsInterviewComplete(\n        eventSourceRef.current && eventSourceRef.current.readyState === EventSource.CLOSED\n      );\n      return;\n    }\n\n    const nextMessage = messageQueue.current.shift();\n\n    setMessages((prev) => [...prev, nextMessage]);\n\n    if (nextMessage.audio && isAudioEnabledRef.current) {\n      if (currentPlayingAudio.current) {\n        currentPlayingAudio.current.pause();\n        currentPlayingAudio.current.src = '';\n      }\n      const audio = new Audio(nextMessage.audio);\n      currentPlayingAudio.current = audio;\n\n      audio.onended = () => {\n        currentPlayingAudio.current = null;\n        processQueue();\n      };\n      audio.onerror = (e) => {\n        console.error(\"Audio playback error:\", e);\n        currentPlayingAudio.current = null;\n        processQueue();\n      };\n      audio.play().catch(e => {\n        console.error(\"Error playing audio automatically:\", e);\n        currentPlayingAudio.current = null;\n        processQueue();\n      });\n    } else {\n      // For non-audio, schedule the next processing call with a fixed delay\n      // to simulate reading time. This will call processQueue again, which will\n      // handle an empty queue and stop the chain if needed.\n      timeoutIdRef.current = setTimeout(processQueue, waitTimeRef.current);\n    }\n  }, [setMessages, setIsInterviewComplete]);\n\n  useEffect(() => {\n    if (!selectedPatient || !selectedCondition) return;\n\n    setMessages([]);\n    setIsInterviewComplete(false);\n    messageQueue.current = [];\n    if (currentPlayingAudio.current) {\n      currentPlayingAudio.current.pause();\n      currentPlayingAudio.current = null;\n    }\n    // Prepend base URL if running on localhost:3000\n    const baseURL =\n      window.location.origin === \"http://localhost:3000\"\n        ? \"http://localhost:7860\"\n        : \"\";\n    const url = `${baseURL}/api/stream_conversation?patient=${encodeURIComponent(\n      selectedPatient.name\n    )}&condition=${encodeURIComponent(selectedCondition)}`;\n    const eventSource = new EventSource(url);\n    eventSourceRef.current = eventSource;\n\n    eventSource.onmessage = (event) => {\n      try {\n        const data = JSON.parse(event.data);\n\n        // Check if the parsed object is our special 'end' signal\n        if (data && data.event === 'end') {\n          console.log(\"Server signaled end of stream. Closing connection.\");\n          eventSource.close();\n          processQueue();\n          return; \n        }        \n        messageQueue.current.push(data);\n        // Always call processQueue after pushing a message, unless audio or timeout is active\n        if (!currentPlayingAudio.current && !timeoutIdRef.current) {\n          processQueue();\n        }\n      } catch (error) {\n        console.warn(\"Could not parse message data. Data received:\", event.data, \"Error:\", error);\n      }\n    };\n\n    eventSource.onerror = (err) => {\n      console.error(\"EventSource failed:\", err);\n      eventSource.close();\n    };\n\n\n    return () => {\n      if (eventSourceRef.current) {\n        eventSourceRef.current.close();\n        eventSourceRef.current = null;\n      }\n      if (timeoutIdRef.current) {\n        clearTimeout(timeoutIdRef.current);\n        timeoutIdRef.current = null;\n      }\n      // Ensure any playing audio is stopped when component unmounts or dependencies change\n      if (currentPlayingAudio.current) {\n        currentPlayingAudio.current.pause();\n        currentPlayingAudio.current = null;\n      }\n    };\n  }, [selectedPatient, selectedCondition, processQueue]);\n\n  useEffect(() => {\n    processQueue();\n  }, [waitTime, processQueue]);\n  \n  useEffect(() => {\n    // Prevent body scroll when Interview is shown\n    document.body.style.overflowY = \"clip\";\n    return () => {\n      document.body.style.overflowY = \"unset\";\n    };\n  }, []);\n\n  useEffect(() => {\n    if (chatContainerRef.current) {\n      const container = chatContainerRef.current;\n      const lastMessage = messages[messages.length - 1];\n      if (lastMessage && lastMessage.speaker === \"report\") { \n        return;\n      }\n\n      const isNearBottom =\n        container.scrollHeight - container.scrollTop - container.clientHeight <\n        container.clientHeight;\n      if (isNearBottom && messages.length > 0) {\n        lastMessageRef.current.scrollIntoView({\n          behavior: \"smooth\",\n          block: \"end\",\n        });\n      }\n    }\n  }, [messages]);\n\n  // Update report on new messages\n  useEffect(() => {\n    const reportMessages = messages.filter((msg) => msg.speaker === \"report\");\n    if (reportMessages.length > 0) {\n      const latestReportMessageText =\n        reportMessages[reportMessages.length - 1].text;\n      const newReport = marked(latestReportMessageText.trim());\n      if (newReport !== currentReport) {\n        setPrevReport(currentReport);\n        setCurrentReport(newReport);\n      }\n    }\n  }, [messages, currentReport]);\n\n  // Updated diff function to tokenize HTML and use nested diffWords for text changes\n  const getDiffReport = () => {\n    // Tokenize HTML into tags and text parts\n    const tokenizeHTML = (html) => html.match(/(<[^>]+>|[^<]+)/g) || [];\n    const tokensPrev = tokenizeHTML(prevReport);\n    const tokensCurrent = tokenizeHTML(currentReport);\n    const diffParts = diffArrays(tokensPrev, tokensCurrent);\n\n    let result = \"\";\n    for (let i = 0; i < diffParts.length; i++) {\n      // If a removed part is immediately followed by an added part,\n      // and both are plain text (not an HTML tag), apply inner diffWords.\n      if (\n        diffParts[i].removed &&\n        i + 1 < diffParts.length &&\n        diffParts[i + 1].added\n      ) {\n        const removedText = diffParts[i].value.join(\"\");\n        const addedText = diffParts[i + 1].value.join(\"\");\n        // Check if both parts are not HTML tags\n        if (\n          (!/^<[^>]+>$/.test(removedText) && !/^<[^>]+>$/.test(addedText))\n        ) {\n          const innerDiff = diffWords(removedText, addedText);\n          const innerResult = innerDiff\n            .map((part) => {\n              if (part.added) {\n                return `<span class=\"add\">${part.value}</span>`;\n              } else if (part.removed) {\n                return `<span class=\"remove\">${part.value}</span>`;\n              }\n              return part.value;\n            })\n            .join(\"\");\n          result += innerResult;\n          i++;\n          continue;\n        }\n      }\n      if (diffParts[i].added) {\n        result += `<span class=\"add\">${diffParts[i].value.join(\"\")}</span>`;\n      } else if (diffParts[i].removed) {\n        result += `<span class=\"remove\">${diffParts[i].value.join(\"\")}</span>`;\n      } else {\n        result += diffParts[i].value.join(\"\");\n      }\n    }\n    return result;\n  };\n\n  // Fetch evaluation when showEvaluation is triggered\n  useEffect(() => {\n    if (!showEvaluation) return;\n    setIsFetchingEvaluation(true);\n    setEvaluation('');\n    // Get latest report\n    const reportMessages = messages.filter((msg) => msg.speaker === \"report\");\n    const report =\n      reportMessages.length > 0\n        ? marked(reportMessages[reportMessages.length - 1].text.trim())\n        : \"<p>No report available.</p>\";\n    // Prepend base URL if running on localhost:3000\n    const baseURL = window.location.origin === \"http://localhost:3000\" ? \"http://localhost:7860\" : \"\";\n    fetch(`${baseURL}/api/evaluate_report`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        report,\n        condition: selectedCondition\n      })\n    })\n      .then(response => response.json())\n      .then(data => {\n        setEvaluation(data.evaluation.replace('```html\\n','').replace('\\n```',''));\n        setIsFetchingEvaluation(false);\n      })\n      .catch(error => {\n        setEvaluation('Error fetching evaluation.');\n        setIsFetchingEvaluation(false);\n      });\n  }, [showEvaluation, messages, selectedCondition]);\n\n  // Scroll report-content to bottom when evaluate button appears\n  useEffect(() => {\n    if (isInterviewComplete && reportContentRef.current) {\n      reportContentRef.current.scrollTop = reportContentRef.current.scrollHeight;\n    }\n  }, [isInterviewComplete]);\n\n  const handleToggleWaitTime = () => {\n    setWaitTime((prev) => (prev === 1000 ? 3000 : 1000));\n  };\n\n  const handleToggleAudio = () => {\n    setIsAudioEnabled(prev => {\n      const isNowEnabled = !prev;\n      // If we are disabling audio and something is playing, stop it and continue the queue.\n      if (!isNowEnabled && currentPlayingAudio.current) {\n        currentPlayingAudio.current.pause();\n        currentPlayingAudio.current.src = '';\n        currentPlayingAudio.current = null;\n      }\n      return isNowEnabled;\n    });\n  };\n\n  const playAudio = (audioDataUrl) => {\n    if (audioDataUrl) {\n      const audio = new Audio(audioDataUrl);\n      audio.play().catch(e => {\n        console.error(\"Error playing audio:\", e);\n      });\n    }\n  };\n\n  return (\n    <div className=\"page interview-page\">\n      <div className=\"headerButtonsContainer\">\n        <button className=\"back-button\" onClick={onBack}>\n          <i className=\"material-icons back-button-icon\">keyboard_arrow_left</i>\n          Atrás\n        </button>\n        <button className=\"details-button\" onClick={() => setIsDetailsPopupOpen(true)}>\n          <i className=\"material-icons code-block-icon\">code</i>&nbsp; Detalles\n          sobre esta Demo\n        </button>\n      </div>\n      <div className=\"frame\">\n        <div className=\"interview-split-container\">\n          {/* Top: Interview Chat */}\n          <div className=\"interview-left-section\">\n            {/* Right: Chat */}\n            <div className=\"interview-chat-panel\">\n              <div className=\"header2\">\n                Entrevista Simulada\n                &nbsp;\n                <i\n                  className=\"material-icons toggle-icon\"\n                  style={{\n                    cursor: \"pointer\",\n                    color: isAudioEnabled ? \"#1976d2\" : \"#888\",\n                  }}\n                  title={`Haz clic para ${\n                    isAudioEnabled ? \"desactivar\" : \"activar\"\n                  } el audio`}\n                  onClick={handleToggleAudio}\n                >\n                  {isAudioEnabled ? \"volume_up\" : \"volume_off\"}\n                </i>\n                {isAudioEnabled && (<span>audio por Gemini TTS</span>)}\n                {!isAudioEnabled && (\n                <i\n                  className=\"material-icons toggle-icon\"\n                  style={{\n                    cursor: \"pointer\",\n                    color: waitTime === 1000 ? \"#1976d2\" : \"#888\",\n                  }}\n                  title={`Haz clic para ${\n                    waitTime === 1000 ? \"ralentizar\" : \"acelerar\"\n                  } la entrevista`}\n                  onClick={handleToggleWaitTime}\n                >\n                  speed\n                </i>)}\n                \n              </div>\n              <div className=\"chat-container\" ref={chatContainerRef}>\n                {messages.length === 0 ? (\n                  <div className=\"chat-waiting-indicator\">\n                    Esperando a que comience la entrevista...\n                  </div>\n                ) : (\n                  messages\n                    .filter((msg) => msg.speaker !== \"report\")\n                    .map((msg, idx, filteredMessages) => (\n                      <div\n                        ref={idx === filteredMessages.length - 1 ? lastMessageRef : null}\n                        className={`chat-message-wrapper ${msg.speaker}${idx === filteredMessages.length - 1 ? \" fade-in\" : \"\"}${msg.audio ? \" has-audio\" : \"\"}`}\n                      key={idx}\n                    >\n                      {msg.speaker.includes(\"interviewer\") && (\n                        <img\n                          className=\"chat-avatar\"\n                          src=\"assets/ai_headshot.svg\"\n                          alt=\"Interviewer\"\n                        />\n                      )}\n                      <div className={`chat-bubble ${msg.audio ? \"with-audio\" : \"\"}`}>\n                        {msg.speaker.includes(\"thinking\") && (\n                          <div className=\"thinking-header\">Pensando...</div>\n                        )}\n                        {msg.text}\n                      </div>\n                      {msg.speaker === \"patient\" && (\n                        <img\n                          className=\"chat-avatar\"\n                          src={selectedPatient.headshot}\n                          alt={selectedPatient.name}\n                        />\n                      )}\n                    </div>\n                  ))\n                )}\n              </div>\n            </div>\n          </div>\n          {/* Right: Report Section */}\n          <div className=\"interview-right-section\">\n            <div className=\"header2\">Reporte Generado</div>\n            <div className=\"report-content\" ref={reportContentRef}>\n              {/* Updated report rendering to show diff if available */}\n              <div\n                dangerouslySetInnerHTML={{\n                  __html: prevReport ? getDiffReport() : currentReport,\n                }}\n              />\n              {isInterviewComplete && (\n                <button\n                  className=\"evaluate-button\"\n                  onClick={() => setShowEvaluationInfoPopup(true)}\n                  disabled={showEvaluation || showEvaluationInfoPopup}\n                ><i className=\"material-icons back-button-icon\">keyboard_arrow_down</i>\n                  Ver Evaluación del Reporte\n                </button>\n              )}\n              <div className=\"evaluation-text\">\n                {showEvaluation && (\n                  isFetchingEvaluation\n                    ? <div>Por favor espera...</div>\n                    : parse(evaluation)\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      {showEvaluationInfoPopup && (\n        <div className=\"popup-overlay\">\n          <div className=\"popup-content\">\n            <h2>Acerca de la Evaluación</h2>\n            <p>\n              Ahora le pediremos a MedGemma que evalúe su propio rendimiento al\n              generar este reporte. Le proporcionaremos toda la\n              información sobre {selectedPatient.name}, incluyendo su\n              diagnóstico real y aspectos del historial de la condición no incluidos previamente. \n              Usando esta nueva información, MedGemma\n              destacará hechos clave que incluyó correctamente e identificará otra\n              información que habría sido beneficiosa agregar.\n            </p>\n            <p>\n              El propósito de este paso es proporcionar a los usuarios no médicos una\n              idea de qué tan bien lo hizo MedGemma en esta tarea. Aunque la evaluación\n              es completada por MedGemma, los ejemplos en esta demo también han sido\n              revisados por clínicos para precisión. Aunque la evaluación de MedGemma\n              no representa un estándar basado en consenso,\n              esta ilustración simplemente muestra un ejemplo de un enfoque que los desarrolladores podrían adoptar \n              para evaluar calidad y completitud.\n            </p>\n            <button className=\"popup-button\" onClick={() => {\n              setShowEvaluationInfoPopup(false);\n              setShowEvaluation(true);\n            }}>Continuar</button>\n          </div>\n        </div>)}\n      <DetailsPopup\n        isOpen={isDetailsPopupOpen}\n        onClose={() => setIsDetailsPopupOpen(false)}\n      />\n    </div>\n  );\n};\n\nexport default Interview;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}